{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Generic_Dataset_Table_DS",
						"type": "DatasetReference"
					},
					"name": "Product"
				},
				{
					"dataset": {
						"referenceName": "DS_Gen_Datalake",
						"type": "DatasetReference"
					},
					"name": "ProductCategory"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Generic_Dataset_Table_DS",
						"type": "DatasetReference"
					},
					"name": "DBWrite"
				}
			],
			"transformations": [
				{
					"name": "jnprodcat"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as string,",
				"          ListPrice as string,",
				"          Size as string,",
				"          Weight as string,",
				"          ProductCategoryID as string,",
				"          ProductModelID as string,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Product",
				"source(output(",
				"          ProductCategoryID as string,",
				"          ParentProductCategoryID as string,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ProductCategory",
				"Product, ProductCategory join(Product@ProductCategoryID == ProductCategory@ProductCategoryID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> jnprodcat",
				"jnprodcat sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DBWrite"
			]
		}
	}
}