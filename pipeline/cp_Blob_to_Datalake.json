{
	"name": "cp_Blob_to_Datalake",
	"properties": {
		"description": "this pipeline copies data from datalake to blob data storage",
		"activities": [
			{
				"name": "Blob_to_DataLake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "lkpStorageDetails",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Parquet_blocks",
						"type": "DatasetReference",
						"parameters": {
							"containerName": {
								"value": "@activity('lkpStorageDetails').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "lkpStorageDetails",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select container_name from storage where type='sablob10001';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Generic_Db_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.storage_table",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"storage_table": {
				"type": "string",
				"defaultValue": "storage"
			}
		},
		"folder": {
			"name": "old_jobs"
		},
		"annotations": [],
		"lastPublishTime": "2022-03-21T02:01:34Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}